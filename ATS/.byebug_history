c
@role
c
@role
c
@user.role_id
@user.role
@role
c
@user.departments
@user.colleges
@user.collegs
@user
c
@colleges
@departments
c
Department.where(id: params[:colleges][:ids])
params[:colleges][:ids]
c
params[:colleges][:ids]
@departments
Department.where(id: params[:colleges][:ids])
c
params[:colleges][:ids]
Department.where(params[:colleges][:ids])
@departments
c
@departments
c
params
c
params
c
params
c
val
c
College.all
c
n
c
student.degrees.create(degree)
degree
n
degree
c
Degree.order("RANDOM()").first.to_s
Degree.order("RANDOM()").first.to_hash
Degree.order("RANDOM()").first
c
student.degrees
student.degree
student
c
student
c
student
 student.degree.create(Degree.order("RANDOM()").first)
c
student
student.degree
Degree.order("RANDOM()").first
c
role
c
Student.students_in_department(session[:role_id])
c
user.role_id
c
user
user.role
c
User.find params[:id]
@user
c
@user
c
User.find params[:id]
@user
c
@role
@user.role_id
c
User.find params[:id]
c
User.find params[:id]
@user
c
n
c
Role.find_by_id(params[:role][:role_id])
c
params[:role][:role_id]
c
params
Role.find_by_id(params[:role])
params[:role]
c
params[:role]
params[:role}
c
n
c
params[:role]
c
n
c
Role.all
Role.find_by
Role.find_by_id(params[:role].role_id)
c
params[:role]
params[:role_id]
params[:role]
session[:role]
session[:role_id]
session
@role
c
params
user_params
c
user
user.role
c
user
user.role_id
user.role
c
session[:role_id]
session
c
session
role
c
role
c
session[:role_id]
c
 Student.students_in_department
@students
c
Student.students_in_department
c
Student.students_in_department
c
Student.students_in_department
c
user
user.id
c
user
user.id
c
exit
c
user.provider
n
user
n
user
c
user
user.first_name
user.email
user.name
user.uid
user.provider
auth.provider
n
user
n
user
User.where(email: auth.info.email, name: auth.info.name)
c
auth.info.email
auth.info.name
auth
auth.email
User.where(email: auth.email, name: auth.name)
c
user
exit
auth
c
user
User.where(provider: auth.provider, uid: auth.uid)
e
user
<<<<<<< HEAD
byebug features/student.features
=======
c
exit
user[:email]
user.name
email
user
user.email
exit
c
email
exit
User.all
exit
    7:         )c
    6:             :oauth_expires_at => oauth_expires_at
User.create(:email => email, :uid => uid, :oauth_token => oauth_token,
exit
user
exit
page.body
link
c
link
c
exit
page.body
link
c
link
c
page.body
exit
page.body
c
n
table.hashes
c
n
exit
table
c
table.rows_hash
c
table.rows_hash
c
table
c
exit
page.body
exit
page.body
value
c
page.body
page
c
n
value
field
c
field
c
field
